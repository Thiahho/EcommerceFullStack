events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuración básica optimizada
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 2;
    client_header_timeout 10;
    client_max_body_size 50M;

    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configuración de compresión mejorada
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Configuración de caché mejorada
    open_file_cache max=10000 inactive=5m;
    open_file_cache_valid 2m;
    open_file_cache_min_uses 1;
    open_file_cache_errors on;

    # Headers de seguridad globales
    server_tokens off;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=register:10m rate=2r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream configuration
    upstream drcell_backend {
        server drcell_backend:80;  # ⚠️ CORREGIDO: Puerto 80 en lugar de 5000
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream drcell_frontend {
        server drcell_frontend:80;  # ⚠️ AGREGADO: Frontend separado
        keepalive 16;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # Bloquear IPs sospechosas (opcional)
    # geo $blocked_ip {
    #     default 0;
    #     # 192.168.1.0/24 1;  # Bloquear subnet específica
    # }

    # Redireccionamiento HTTP a HTTPS
    server {
        listen 80;
        server_name localhost:5000 www.localhost:5000;  # ⚠️ CORREGIDO: Dominios específicos
        
        # Permitir Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirigir todo lo demás a HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Configuración principal HTTPS
    server {
        listen 443 ssl http2;
        server_name localhost:5000 www.localhost:5000;  # ⚠️ CORREGIDO: Dominios específicos

        # Configuración SSL moderna
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Connection limiting
        limit_conn conn_limit_per_ip 20;

        # Headers de proxy optimizados
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;

        # Bloquear acceso a archivos sensibles
        location ~ /\.(env|git|svn|htaccess|htpasswd) {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        location ~ \.(sql|log|bak|backup|config|ini)$ {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # Archivos estáticos con caché agresivo
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map|webp|avif)$ {
            proxy_pass http://drcell_frontend;  # ⚠️ CORREGIDO: Usar frontend
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Configuración de CORS para archivos estáticos
            add_header Access-Control-Allow-Origin "https://localhost:5000";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            
            # Fallback si no existe el archivo
            try_files $uri @frontend;
        }

        # API de autenticación con rate limiting estricto
        location /api/auth/login {
            limit_req zone=login burst=3 nodelay;
            limit_req_status 429;
            proxy_pass http://drcell_backend;
        }

        location /api/auth/register {
            limit_req zone=register burst=2 nodelay;
            limit_req_status 429;
            proxy_pass http://drcell_backend;
        }

        # API general con rate limiting
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            limit_req_status 429;
            proxy_pass http://drcell_backend;
        }

        # SignalR/WebSocket support
        location /hub/ {
            proxy_pass http://drcell_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Configuración principal - Frontend SPA
        location / {
            limit_req zone=general burst=20 nodelay;
            proxy_pass http://drcell_frontend;  # ⚠️ CORREGIDO: Usar frontend
            
            # Configuración para SPA (Single Page Application)
            try_files $uri $uri/ @frontend;
        }

        # Fallback para frontend SPA
        location @frontend {
            proxy_pass http://drcell_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status (solo para monitoreo interno)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Manejo de errores personalizados
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            proxy_pass http://drcell_frontend;
        }
        
        location = /50x.html {
            proxy_pass http://drcell_frontend;
        }
    }

    # Servidor para dominios no autorizados
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        return 444;  # Cerrar conexión sin respuesta
    }
}